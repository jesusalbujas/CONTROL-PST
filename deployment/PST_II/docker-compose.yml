services:
  postgresql.service:
    container_name: ${POSTGRES_HOST}
    image: ${POSTGRES_IMAGE}
    restart: ${GENERIC_RESTART}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_two_volume:/var/lib/postgresql/data
      - ./postgresql/init.sh:/docker-entrypoint-initdb.d/init.sh
      # - ./postgresql/seed.backup:/tmp/seed.backup # System DB
      - ./postgresql/after_run:/tmp/after_run
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5432; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - shared_network

  adempiere.zk:
    image: ${ADEMPIERE_ZK_IMAGE}
    container_name: ${ADEMPIERE_ZK_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - ${ADEMPIERE_ZK_PORT}:8080
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/postgresql.service/5432; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      ADEMPIERE_DB_SERVER: ${ADEMPIERE_ZK_DB_HOST}
      ADEMPIERE_DB_NAME: ${ADEMPIERE_ZK_DB_NAME}
      ADEMPIERE_DB_USER: ${ADEMPIERE_ZK_DB_USER}
      ADEMPIERE_DB_PASSWORD: ${ADEMPIERE_ZK_DB_PASSWORD}
      ADEMPIERE_ZK_DB_PORT: ${ADEMPIERE_ZK_DB_PORT}
    volumes:
      - ${TIMEZONE_PATH_ON_HOST}:${TIMEZONE_PATH_ON_CONTAINER}:${TIMEZONE_OPTIONS}    # Map the Timezone  of the host to the Timezone of the container
      - ${LOCALTIME_PATH_ON_HOST}:${LOCALTIME_PATH_ON_CONTAINER}:${LOCALTIME_OPTIONS} # Map the Localtime of the host to the Timezone of the container
    networks:
      - shared_network

networks:
  shared_network:
    name: ${DEFAULT_NETWORK}

volumes:
  postgres_volume:
    name: ${POSTGRES_VOLUME}